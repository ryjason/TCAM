  0%|                                                                                              | 0/150 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 778, in convert_to_tensors
    tensor = as_tensor(value)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 740, in as_tensor
    return torch.tensor(value)
ValueError: expected sequence of length 5 at dim 1 (got 3)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/jasonrao/Documents/TCAM/pm25-llava-finetune/train_llava_pm25.py", line 207, in <module>
    main()
  File "/home/jasonrao/Documents/TCAM/pm25-llava-finetune/train_llava_pm25.py", line 197, in main
    trainer.train()
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 2240, in train
    return inner_training_loop(
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 2509, in _inner_training_loop
    batch_samples, num_items_in_batch = self.get_batch_samples(epoch_iterator, num_batches, args.device)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 5263, in get_batch_samples
    batch_samples.append(next(epoch_iterator))
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/accelerate/data_loader.py", line 566, in __iter__
    current_batch = next(dataloader_iter)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/data/data_collator.py", line 272, in __call__
    batch = pad_without_fast_tokenizer_warning(
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/data/data_collator.py", line 67, in pad_without_fast_tokenizer_warning
    padded = tokenizer.pad(*pad_args, **pad_kwargs)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 3386, in pad
    return BatchEncoding(batch_outputs, tensor_type=return_tensors)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 242, in __init__
    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 794, in convert_to_tensors
    raise ValueError(
ValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`pixel_values` in this case) have excessive nesting (inputs type `list` where type `int` is expected).
Traceback (most recent call last):
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 778, in convert_to_tensors
    tensor = as_tensor(value)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 740, in as_tensor
    return torch.tensor(value)
ValueError: expected sequence of length 5 at dim 1 (got 3)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/jasonrao/Documents/TCAM/pm25-llava-finetune/train_llava_pm25.py", line 207, in <module>
    main()
  File "/home/jasonrao/Documents/TCAM/pm25-llava-finetune/train_llava_pm25.py", line 197, in main
    trainer.train()
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 2240, in train
    return inner_training_loop(
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 2509, in _inner_training_loop
    batch_samples, num_items_in_batch = self.get_batch_samples(epoch_iterator, num_batches, args.device)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/trainer.py", line 5263, in get_batch_samples
    batch_samples.append(next(epoch_iterator))
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/accelerate/data_loader.py", line 566, in __iter__
    current_batch = next(dataloader_iter)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 674, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/data/data_collator.py", line 272, in __call__
    batch = pad_without_fast_tokenizer_warning(
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/data/data_collator.py", line 67, in pad_without_fast_tokenizer_warning
    padded = tokenizer.pad(*pad_args, **pad_kwargs)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 3386, in pad
    return BatchEncoding(batch_outputs, tensor_type=return_tensors)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 242, in __init__
    self.convert_to_tensors(tensor_type=tensor_type, prepend_batch_axis=prepend_batch_axis)
  File "/home/jasonrao/Documents/TCAM/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py", line 794, in convert_to_tensors
    raise ValueError(
ValueError: Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' 'truncation=True' to have batched tensors with the same length. Perhaps your features (`pixel_values` in this case) have excessive nesting (inputs type `list` where type `int` is expected).
